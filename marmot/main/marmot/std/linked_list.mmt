namespace marmot::std;

struct linked_list<T> {
    node<T> header;
    node<T> tail;
}

struct node<T> {
    node<T> next;
    node<T> prev;
    T value;
}

func add[linked_list<T>](T value) : void {
    node<T> n = new node();
    n.value = value;

    match _.header {
        header -> {
            node<T> p = header;

            while(p.next.non_null) {
                p = p.next;
            }

            p.next = n;
            n.prev = p;

            _.tail = n;
        }

        null -> {
            _.header = n;
            _.tail = n;
        }
    }
}

func remove_last[linked_list<T>]() : T {
    T val = null;

    match _.tail {
        tail -> {
            node<T> n = _.tail;
            val = n.val;
            
            _.tail = n.prev;
            _.tail.next = null;

            delete n;
        }
    }

    ret val;
}